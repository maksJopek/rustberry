#!/bin/sh
# Check if gh and jq are installed
gh --version >/dev/null 2>/dev/null || { echo 'You need to install github client to use this script'; exit 0; }
jq --version >/dev/null 2>/dev/null || { echo 'You need to install jq to use this script'; exit 0; }

# Display issue list
gh issue list -L 50 2>/dev/null || { echo 'Not in a git repository'; exit 0; }

# Get issue number
printf '# Select issue (0 if your issue is not on the list)\n'
read -r issue

# If issue not found
# Searching until user found their issue
while [ "$issue" = "0" ] || [ "$issue" = "" ] ; do
	echo "# Search issue by string"
	read -r string

	gh issue list -S "$string"
	printf '# Select issue (0 if your issue is not on the list)\n'
	read -r issue
done

# Check if issue with given number exist
gh issue view "$issue" 2>/dev/null || { echo 'Wrong issue number'; exit 0; }

# Get assignee
printf '# Who should be assigned to this issue (login or @me)\n'
read -r assignee

# Default
[ "$assignee" = "" ] && assignee="@me"

# Get short
printf '# Enter repo shortcut\n'
read -r short

# Default
[ "$short" = "" ] && short="RB"

# Get repo link
link=$(git config --get remote.origin.url)
link=$(echo "$link" | sed 's/git@github.com:/https:\/\/github.com\//;s/\.git//')

# Get issue label and title
json=$(gh issue view "$issue" --json labels,title)
label=$(echo "$json" | jq -r '.labels[0].name')
title=$(echo "$json" | jq -r '.title')

# Shorten title and remplace \s with -
title=$(echo "$title" | grep -oP '^(\w+\s?){1,4}')
title=$(echo "$title" | sed 's/\s/-/g')

# Set branch name
branch="$label/$short-$issue|$title"

echo "$assignee is going to be assigned to this issue"
echo "New branch will be created ($branch)" 
echo 'Press any button to confirm'
read -r

# Magic here
git checkout develop && git pull origin develop && git checkout -b "$branch" &&\
gh issue edit "$issue" --add-assignee "$assignee" &&\
gh issue comment "$issue" -b "#### Started work on branch [$branch]($link/tree/$branch)" &&\
git push -u origin "$branch"
